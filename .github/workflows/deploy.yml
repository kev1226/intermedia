name: CI/CD Deploy to EC2 (sin Docker Compose)

on:
  push:
    branches:
      - main

env:
  BACKEND_PORT: 4000
  FRONTEND_PORT: 5173

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        run: |
          BACKEND_IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/back:latest"
          docker build -t $BACKEND_IMAGE ./BACKEND
          docker push $BACKEND_IMAGE

      - name: Build and push frontend image
        run: |
          FRONTEND_IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/front:latest"
          docker build -t $FRONTEND_IMAGE ./frontend
          docker push $FRONTEND_IMAGE

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Deploy to EC2 via SSH (sin Docker Compose)
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Instalar docker si no está instalado
            if ! command -v docker &> /dev/null; then
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
            fi

            # Detener y eliminar contenedores si existen
            if [ "$(docker ps -q -f name=backend)" ]; then
              docker stop backend
              docker rm backend
            fi
            if [ "$(docker ps -q -f name=frontend)" ]; then
              docker stop frontend
              docker rm frontend
            fi

            # Descargar últimas imágenes
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/back:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/front:latest

            # Ejecutar backend
            docker run -d --name backend -p $BACKEND_PORT:4000 --env OPENWEATHER_API_KEY=${{ secrets.OPENWEATHER_API_KEY }} ${{ secrets.DOCKERHUB_USERNAME }}/back:latest

            # Ejecutar frontend
            docker run -d --name frontend -p $FRONTEND_PORT:3000 ${{ secrets.DOCKERHUB_USERNAME }}/front:latest
